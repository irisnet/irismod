syntax = "proto3";
package irismod.coinswap;

import "coinswap/coinswap.proto";
import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/irisnet/irismod/modules/coinswap/types";
option (gogoproto.goproto_getters_all) = false;

// Msg defines the coinswap Msg service
service Msg {
    // AddLiquidity defines a method for depositing some tokens to the liquidity pool
    rpc AddLiquidity(MsgAddLiquidity) returns (MsgAddLiquidityResponse);

    // AddUnilateralLiquidity defines a method for depositing some tokens unilaterally to the liquidity pool
    rpc AddUnilateralLiquidity(MsgAddUnilateralLiquidity) returns (MsgAddUnilateralLiquidityResponse);

    // RemoveLiquidity defines a method for withdraw some tokens from the liquidity pool
    rpc RemoveLiquidity(MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);

    // RemoveUnilateralLiquidity defines a method for withdraw some tokens unilaterally from the liquidity pool
    rpc RemoveUnilateralLiquidity(MsgRemoveUnilateralLiquidity) returns (MsgRemoveUnilateralLiquidityResponse);

    // SwapCoin defines a method for swapping a token with the other token from the liquidity pool
    rpc SwapCoin(MsgSwapOrder) returns (MsgSwapCoinResponse);
}

// MsgAddLiquidity defines a msg for adding liquidity to a reserve pool
message MsgAddLiquidity {
    cosmos.base.v1beta1.Coin max_token = 1 [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"max_token\"" ];
    string exact_standard_amt = 2 [ (gogoproto.moretags) = "yaml:\"exact_standard_amt\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string min_liquidity = 3 [ (gogoproto.moretags) = "yaml:\"min_liquidity\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    int64 deadline = 4;
    string sender = 5;
}

// MsgAddLiquidityResponse defines the Msg/AddLiquidity response type
message MsgAddLiquidityResponse {
    cosmos.base.v1beta1.Coin mint_token = 1;
}

// MsgAddLiquidityUni defines a msg for adding liquidity unilaterally to a reserve pool
message MsgAddUnilateralLiquidity {
    uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
    cosmos.base.v1beta1.Coin exact_token = 2 [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"exact_token\"" ]; // exact amount of token
    string min_liquidity = 3 [ (gogoproto.moretags) = "yaml:\"min_liquidity\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    int64 deadline = 5;
    string sender = 6;
}

// MsgAddLiquidityUniResponse defines the Msg/AddLiquidityUni response type
message MsgAddUnilateralLiquidityResponse {
    cosmos.base.v1beta1.Coin mint_token = 1;
}

// MsgRemoveLiquidity defines a msg for removing liquidity from a reserve pool
message MsgRemoveLiquidity {
    cosmos.base.v1beta1.Coin withdraw_liquidity = 1 [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"withdraw_liquidity\"" ];
    string min_token = 2 [ (gogoproto.moretags) = "yaml:\"min_token\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string min_standard_amt = 3 [ (gogoproto.moretags) = "yaml:\"min_standard_amt\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    int64 deadline = 4;
    string sender = 5;
}

// MsgRemoveLiquidityResponse defines the Msg/RemoveLiquidity response type
message MsgRemoveLiquidityResponse {
    repeated cosmos.base.v1beta1.Coin withdraw_coins = 1;
}

// MsgRemoveUnilateralLiquidity defines a msg for removing liquidity unilaterally to a reserve pool
message MsgRemoveUnilateralLiquidity {
    uint64 pool_id = 1 [ (gogoproto.moretags) = "yaml:\"pool_id\"" ];
    cosmos.base.v1beta1.Coin min_token = 2 [ (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"min_token\"" ]; // minimum amount of token
    string exact_liquidity = 3 [ (gogoproto.moretags) = "yaml:\"exact_liquidity\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    int64 deadline = 4;
    string sender = 5;
}

// MsgRemoveUnilateralLiquidityResponse defines the Msg/RemoveLiquidity response type
message MsgRemoveUnilateralLiquidityResponse {
    repeated cosmos.base.v1beta1.Coin withdraw_coins = 1;
}

// MsgSwapOrder defines a msg for swap order
message MsgSwapOrder {
    Input input = 1 [ (gogoproto.nullable) = false ];
    Output output = 2 [ (gogoproto.nullable) = false ];
    int64 deadline = 3;
    bool is_buy_order = 4 [ (gogoproto.moretags) = "yaml:\"is_buy_order\"" ];
}

// MsgSwapCoinResponse defines the Msg/SwapCoin response type
message MsgSwapCoinResponse {}