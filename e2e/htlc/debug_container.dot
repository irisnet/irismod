digraph "" {
    subgraph "cluster_auth" {
      graph [fontsize="12.0", label="Module: auth", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_authz" {
      graph [fontsize="12.0", label="Module: authz", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_bank" {
      graph [fontsize="12.0", label="Module: bank", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_coinswap" {
      graph [fontsize="12.0", label="Module: coinswap", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/coinswap.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "mods.irisnet.org/modules/coinswap.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_consensus" {
      graph [fontsize="12.0", label="Module: consensus", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_crisis" {
      graph [fontsize="12.0", label="Module: crisis", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_distribution" {
      graph [fontsize="12.0", label="Module: distribution", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_evidence" {
      graph [fontsize="12.0", label="Module: evidence", penwidth="0.5", style="rounded"];
      "cosmossdk.io/x/evidence.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_farm" {
      graph [fontsize="12.0", label="Module: farm", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/farm.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "mods.irisnet.org/modules/farm.ProvideModule"[color="red", fontcolor="red", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_feegrant" {
      graph [fontsize="12.0", label="Module: feegrant", penwidth="0.5", style="rounded"];
      "cosmossdk.io/x/feegrant/module.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_genutil" {
      graph [fontsize="12.0", label="Module: genutil", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_gov" {
      graph [fontsize="12.0", label="Module: gov", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/gov.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_group" {
      graph [fontsize="12.0", label="Module: group", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_htlc" {
      graph [fontsize="12.0", label="Module: htlc", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/htlc.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "mods.irisnet.org/modules/htlc.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_mint" {
      graph [fontsize="12.0", label="Module: mint", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_mt" {
      graph [fontsize="12.0", label="Module: mt", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/mt.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_nft" {
      graph [fontsize="12.0", label="Module: nft", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/nft.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_oracle" {
      graph [fontsize="12.0", label="Module: oracle", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/oracle.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_params" {
      graph [fontsize="12.0", label="Module: params", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/params.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_random" {
      graph [fontsize="12.0", label="Module: random", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/random.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_record" {
      graph [fontsize="12.0", label="Module: record", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/record.ProvideModule"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_runtime" {
      graph [fontsize="12.0", label="Module: runtime", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideApp"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideBasicManager"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideCometInfoService"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideEventService"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideGenesisTxHandler"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideHeaderInfoService"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideInterfaceRegistry"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreService"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreService"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreService"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/runtime.SetupAppBuilder"[color="red", fontcolor="red", penwidth="0.5", shape="box"];
    }

    subgraph "cluster_service" {
      graph [fontsize="12.0", label="Module: service", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/service.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "mods.irisnet.org/modules/service.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_slashing" {
      graph [fontsize="12.0", label="Module: slashing", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_staking" {
      graph [fontsize="12.0", label="Module: staking", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_token" {
      graph [fontsize="12.0", label="Module: token", penwidth="0.5", style="rounded"];
      "mods.irisnet.org/modules/token.ProvideKeyTable"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "mods.irisnet.org/modules/token.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_tx" {
      graph [fontsize="12.0", label="Module: tx", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
      "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideProtoRegistry"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_upgrade" {
      graph [fontsize="12.0", label="Module: upgrade", penwidth="0.5", style="rounded"];
      "cosmossdk.io/x/upgrade.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

    subgraph "cluster_vesting" {
      graph [fontsize="12.0", label="Module: vesting", penwidth="0.5", style="rounded"];
      "github.com/cosmos/cosmos-sdk/x/auth/vesting.ProvideModule"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
    }

  "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/app/v1alpha1.Config"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/auth/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/authz/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/bank/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/consensus/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/crisis/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/distribution/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/evidence/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/feegrant/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/genutil/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/gov/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/group/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/mint/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/params/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/api/cosmos/slashing/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/staking/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/tx/config/v1.Config"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/upgrade/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/api/cosmos/vesting/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/store/types.KVStoreKey"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/store/types.MemoryStoreKey"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*cosmossdk.io/store/types.TransientStoreKey"[color="black", fontcolor="black", penwidth="1.5"];
  "*cosmossdk.io/x/upgrade/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/baseapp.GRPCQueryRouter"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder"[color="black", fontcolor="black", penwidth="1.5"];
  "*github.com/cosmos/cosmos-sdk/x/crisis/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/x/gov/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*github.com/spf13/viper.Viper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*mods.irisnet.org/api/irismod/coinswap/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/farm/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/htlc/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/mt/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*mods.irisnet.org/api/irismod/nft/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/oracle/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*mods.irisnet.org/api/irismod/random/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/record/module/v1.Module"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*mods.irisnet.org/api/irismod/service/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/api/irismod/token/module/v1.Module"[color="black", fontcolor="black", penwidth="1.5"];
  "*mods.irisnet.org/modules/token/keeper.mockEVM"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "*mods.irisnet.org/modules/token/keeper.mockICS20"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "[]cosmossdk.io/x/tx/signing.CustomGetSigner"[color="black", comment="many-per-container", fontcolor="black", penwidth="1.5"];
  "[]github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1.HandlerRoute"[color="lightgrey", comment="many-per-container", fontcolor="dimgrey", penwidth="0.5"];
  "[]runtime.BaseAppOption"[color="lightgrey", comment="many-per-container", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/core/address.Codec"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/core/comet.BlockInfoService"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/core/event.Service"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/core/genesis.TxHandler"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/core/header.Service"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/core/store.KVStoreService"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/core/store.MemoryStoreService"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/core/store.TransientStoreService"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/depinject.ModuleKey"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/depinject.OwnModuleKey"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/depinject/appconfig.Compose"[color="black", fontcolor="black", penwidth="1.5", shape="box"];
  "cosmossdk.io/log.Logger"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/log.nopLogger"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/x/evidence/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/x/evidence/types.SlashingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/x/evidence/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/x/feegrant.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/x/feegrant.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "cosmossdk.io/x/feegrant/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/x/tx/signing.ProtoFileResolver"[color="black", fontcolor="black", penwidth="1.5"];
  "func() []signing.SignModeHandler"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "func() address.Codec"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "func() runtime.ConsensusAddressCodec"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "func() runtime.ValidatorAddressCodec"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "func() types.AccountI"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/baseapp.MessageRouter"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/client.TxConfig"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/codec.Codec"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/runtime.ConsensusAddressCodec"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/runtime.ValidatorAddressCodec"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/server/types.AppOptions"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/ante.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/ante.FeegrantKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/tx.ConfigOptions"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/auth/vesting/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/authz/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/bank/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/consensus/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/crisis/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/crisis/types.SupplyKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/distribution/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/genutil/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/genutil/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/gov/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/gov/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/gov/types.DistributionKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/gov/types.ParamSubspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/gov/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/group/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/mint/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/slashing/types.StakingKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/exported.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "github.com/cosmos/cosmos-sdk/x/staking/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "google.golang.org/protobuf/reflect/protodesc.Resolver"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "google.golang.org/protobuf/reflect/protoregistry.MessageTypeResolver"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "map[string]cosmossdk.io/core/appmodule.AppModule"[color="red", comment="one-per-module", fontcolor="red", penwidth="0.5"];
  "map[string]github.com/cosmos/cosmos-sdk/types/module.AppModuleBasic"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable"[color="black", comment="one-per-module", fontcolor="black", penwidth="1.5"];
  "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper"[color="lightgrey", comment="one-per-module", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/coinswap/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/coinswap/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/coinswap/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/coinswap/types.Subspace"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/farm/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/farm/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/farm/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/farm/types.DistrKeeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/farm/types.GovKeeper"[color="red", fontcolor="red", penwidth="0.5"];
  "mods.irisnet.org/modules/htlc/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/htlc/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/htlc/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/htlc/types.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/mt/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/nft/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/nft/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/nft/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/oracle/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/oracle/types.ServiceKeeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/random/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/random/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/random/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/random/types.ServiceKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/record/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/service/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/service/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/service/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/service/types.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/token/keeper.Keeper"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "mods.irisnet.org/modules/token/types.AccountKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/token/types.BankKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/token/types.EVMKeeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/token/types.ICS20Keeper"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/modules/token/types.Subspace"[color="black", fontcolor="black", penwidth="1.5"];
  "mods.irisnet.org/simapp.NewConfig"[color="black", fontcolor="black", penwidth="1.5", shape="hexagon"];
  "types.InflationCalculationFn"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "types.RandomGenesisAccountsFn"[color="lightgrey", fontcolor="dimgrey", penwidth="0.5"];
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/app/v1alpha1.Config";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideApp";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "github.com/cosmos/cosmos-sdk/codec.Codec";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "*github.com/cosmos/cosmos-sdk/baseapp.GRPCQueryRouter";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "google.golang.org/protobuf/reflect/protodesc.Resolver";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideApp" -> "google.golang.org/protobuf/reflect/protoregistry.MessageTypeResolver";
  "cosmossdk.io/core/address.Codec" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideInterfaceRegistry";
  "github.com/cosmos/cosmos-sdk/runtime.ValidatorAddressCodec" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideInterfaceRegistry";
  "[]cosmossdk.io/x/tx/signing.CustomGetSigner" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideInterfaceRegistry";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideInterfaceRegistry" -> "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry";
  "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreKey" -> "*cosmossdk.io/store/types.KVStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreKey" -> "*cosmossdk.io/store/types.TransientStoreKey";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreKey" -> "*cosmossdk.io/store/types.MemoryStoreKey";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideGenesisTxHandler";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideGenesisTxHandler" -> "cosmossdk.io/core/genesis.TxHandler";
  "*cosmossdk.io/api/cosmos/app/runtime/v1alpha1.Module" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreService";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreService";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreService";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideKVStoreService" -> "cosmossdk.io/core/store.KVStoreService";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreService";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreService";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideMemoryStoreService" -> "cosmossdk.io/core/store.MemoryStoreService";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreService";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreService";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideTransientStoreService" -> "cosmossdk.io/core/store.TransientStoreService";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideEventService" -> "cosmossdk.io/core/event.Service";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideHeaderInfoService";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideHeaderInfoService" -> "cosmossdk.io/core/header.Service";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideCometInfoService" -> "cosmossdk.io/core/comet.BlockInfoService";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideBasicManager";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideBasicManager" -> "map[string]github.com/cosmos/cosmos-sdk/types/module.AppModuleBasic";
  "*cosmossdk.io/api/cosmos/auth/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec";
  "*cosmossdk.io/api/cosmos/staking/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec";
  "func() address.Codec" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec";
  "func() runtime.ValidatorAddressCodec" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec";
  "func() runtime.ConsensusAddressCodec" -> "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec" -> "cosmossdk.io/core/address.Codec";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec" -> "github.com/cosmos/cosmos-sdk/runtime.ValidatorAddressCodec";
  "github.com/cosmos/cosmos-sdk/runtime.ProvideAddressCodec" -> "github.com/cosmos/cosmos-sdk/runtime.ConsensusAddressCodec";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/auth/module/v1.Module";
  "*cosmossdk.io/api/cosmos/auth/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "cosmossdk.io/core/address.Codec" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "types.RandomGenesisAccountsFn" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "func() types.AccountI" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper";
  "github.com/cosmos/cosmos-sdk/x/auth.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/vesting/module/v1.Module";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/vesting.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/vesting/types.BankKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/vesting.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/vesting.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/bank/module/v1.Module";
  "*cosmossdk.io/api/cosmos/bank/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "cosmossdk.io/log.Logger" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper";
  "github.com/cosmos/cosmos-sdk/x/bank.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/staking/module/v1.Module";
  "*cosmossdk.io/api/cosmos/staking/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/runtime.ValidatorAddressCodec" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/runtime.ConsensusAddressCodec" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/staking/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule" -> "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/staking.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/slashing/module/v1.Module";
  "*cosmossdk.io/api/cosmos/slashing/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/slashing/exported.Subspace" -> "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/slashing.ProvideModule" -> "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/params/module/v1.Module";
  "*cosmossdk.io/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "*cosmossdk.io/store/types.TransientStoreKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideModule" -> "[]github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1.HandlerRoute";
  "cosmossdk.io/depinject.ModuleKey" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "github.com/cosmos/cosmos-sdk/x/params/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable" -> "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace";
  "github.com/cosmos/cosmos-sdk/x/params.ProvideSubspace" -> "github.com/cosmos/cosmos-sdk/x/params/types.Subspace";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/tx/config/v1.Config";
  "*cosmossdk.io/api/cosmos/tx/config/v1.Config" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "cosmossdk.io/core/address.Codec" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/runtime.ValidatorAddressCodec" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "cosmossdk.io/x/tx/signing.ProtoFileResolver" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/ante.FeegrantKeeper" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "func() []signing.SignModeHandler" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "[]cosmossdk.io/x/tx/signing.CustomGetSigner" -> "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule" -> "github.com/cosmos/cosmos-sdk/client.TxConfig";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/auth/tx.ConfigOptions";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideModule" -> "[]runtime.BaseAppOption";
  "github.com/cosmos/cosmos-sdk/x/auth/tx/config.ProvideProtoRegistry" -> "cosmossdk.io/x/tx/signing.ProtoFileResolver";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/genutil/module/v1.Module";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "cosmossdk.io/core/genesis.TxHandler" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "github.com/cosmos/cosmos-sdk/client.TxConfig" -> "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/genutil.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/authz/module/v1.Module";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/authz/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/authz/module.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/upgrade/module/v1.Module";
  "*cosmossdk.io/api/cosmos/upgrade/module/v1.Module" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "cosmossdk.io/core/address.Codec" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "github.com/cosmos/cosmos-sdk/server/types.AppOptions" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "*github.com/spf13/viper.Viper" -> "cosmossdk.io/x/upgrade.ProvideModule";
  "cosmossdk.io/x/upgrade.ProvideModule" -> "*cosmossdk.io/x/upgrade/keeper.Keeper";
  "cosmossdk.io/x/upgrade.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/x/upgrade.ProvideModule" -> "[]runtime.BaseAppOption";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/distribution/module/v1.Module";
  "*cosmossdk.io/api/cosmos/distribution/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/distribution.ProvideModule" -> "map[string]github.com/cosmos/cosmos-sdk/x/staking/types.StakingHooksWrapper";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/evidence/module/v1.Module";
  "cosmossdk.io/core/store.KVStoreService" -> "cosmossdk.io/x/evidence.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "cosmossdk.io/x/evidence.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "cosmossdk.io/x/evidence.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/slashing/keeper.Keeper" -> "cosmossdk.io/x/evidence.ProvideModule";
  "cosmossdk.io/core/address.Codec" -> "cosmossdk.io/x/evidence.ProvideModule";
  "cosmossdk.io/core/comet.BlockInfoService" -> "cosmossdk.io/x/evidence.ProvideModule";
  "cosmossdk.io/x/evidence.ProvideModule" -> "cosmossdk.io/x/evidence/keeper.Keeper";
  "cosmossdk.io/x/evidence.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/mint/module/v1.Module";
  "cosmossdk.io/depinject.OwnModuleKey" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "*cosmossdk.io/api/cosmos/mint/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "types.InflationCalculationFn" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/mint/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/mint.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/group/module/v1.Module";
  "*cosmossdk.io/api/cosmos/group/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter" -> "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/group/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/group/module.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/feegrant/module/v1.Module";
  "cosmossdk.io/core/store.KVStoreService" -> "cosmossdk.io/x/feegrant/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "cosmossdk.io/x/feegrant/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "cosmossdk.io/x/feegrant/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "cosmossdk.io/x/feegrant/module.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "cosmossdk.io/x/feegrant/module.ProvideModule";
  "cosmossdk.io/x/feegrant/module.ProvideModule" -> "cosmossdk.io/x/feegrant/keeper.Keeper";
  "cosmossdk.io/x/feegrant/module.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/gov/module/v1.Module";
  "*cosmossdk.io/api/cosmos/gov/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "cosmossdk.io/depinject.OwnModuleKey" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/baseapp.MsgServiceRouter" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "*github.com/cosmos/cosmos-sdk/x/staking/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/distribution/keeper.Keeper" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule" -> "*github.com/cosmos/cosmos-sdk/x/gov/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/gov.ProvideModule" -> "[]github.com/cosmos/cosmos-sdk/x/gov/types/v1beta1.HandlerRoute";
  "github.com/cosmos/cosmos-sdk/x/gov.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/crisis/module/v1.Module";
  "*cosmossdk.io/api/cosmos/crisis/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "github.com/cosmos/cosmos-sdk/server/types.AppOptions" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "cosmossdk.io/core/address.Codec" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/crisis.ProvideModule" -> "*github.com/cosmos/cosmos-sdk/x/crisis/keeper.Keeper";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*cosmossdk.io/api/cosmos/consensus/module/v1.Module";
  "*cosmossdk.io/api/cosmos/consensus/module/v1.Module" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "cosmossdk.io/core/event.Service" -> "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "github.com/cosmos/cosmos-sdk/x/consensus/keeper.Keeper";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "github.com/cosmos/cosmos-sdk/x/consensus.ProvideModule" -> "[]runtime.BaseAppOption";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/coinswap/module/v1.Module";
  "*mods.irisnet.org/api/irismod/coinswap/module/v1.Module" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "mods.irisnet.org/modules/coinswap/types.Subspace" -> "mods.irisnet.org/modules/coinswap.ProvideModule";
  "mods.irisnet.org/modules/coinswap.ProvideModule" -> "mods.irisnet.org/modules/coinswap/keeper.Keeper";
  "mods.irisnet.org/modules/coinswap.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "mods.irisnet.org/modules/coinswap.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/farm/module/v1.Module";
  "*mods.irisnet.org/api/irismod/farm/module/v1.Module" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "mods.irisnet.org/modules/farm/types.DistrKeeper" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "mods.irisnet.org/modules/farm/types.GovKeeper" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "mods.irisnet.org/modules/coinswap/keeper.Keeper" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "mods.irisnet.org/modules/farm.ProvideModule";
  "mods.irisnet.org/modules/farm.ProvideModule" -> "mods.irisnet.org/modules/farm/keeper.Keeper";
  "mods.irisnet.org/modules/farm.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "mods.irisnet.org/modules/farm.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/htlc/module/v1.Module";
  "*mods.irisnet.org/api/irismod/htlc/module/v1.Module" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "mods.irisnet.org/modules/htlc.ProvideModule";
  "mods.irisnet.org/modules/htlc.ProvideModule" -> "mods.irisnet.org/modules/htlc/keeper.Keeper";
  "mods.irisnet.org/modules/htlc.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "mods.irisnet.org/modules/htlc.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/mt/module/v1.Module";
  "*mods.irisnet.org/api/irismod/mt/module/v1.Module" -> "mods.irisnet.org/modules/mt.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/mt.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/mt.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/mt.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/mt.ProvideModule";
  "mods.irisnet.org/modules/mt.ProvideModule" -> "mods.irisnet.org/modules/mt/keeper.Keeper";
  "mods.irisnet.org/modules/mt.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/nft/module/v1.Module";
  "*mods.irisnet.org/api/irismod/nft/module/v1.Module" -> "mods.irisnet.org/modules/nft.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/nft.ProvideModule";
  "cosmossdk.io/core/store.KVStoreService" -> "mods.irisnet.org/modules/nft.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/nft.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/nft.ProvideModule";
  "mods.irisnet.org/modules/nft.ProvideModule" -> "mods.irisnet.org/modules/nft/keeper.Keeper";
  "mods.irisnet.org/modules/nft.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/oracle/module/v1.Module";
  "*mods.irisnet.org/api/irismod/oracle/module/v1.Module" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "mods.irisnet.org/modules/oracle/types.ServiceKeeper" -> "mods.irisnet.org/modules/oracle.ProvideModule";
  "mods.irisnet.org/modules/oracle.ProvideModule" -> "mods.irisnet.org/modules/oracle/keeper.Keeper";
  "mods.irisnet.org/modules/oracle.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/service/module/v1.Module";
  "*mods.irisnet.org/api/irismod/service/module/v1.Module" -> "mods.irisnet.org/modules/service.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/service.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/service.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/service.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/service.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "mods.irisnet.org/modules/service.ProvideModule";
  "mods.irisnet.org/modules/service.ProvideModule" -> "mods.irisnet.org/modules/service/keeper.Keeper";
  "mods.irisnet.org/modules/service.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "mods.irisnet.org/modules/service.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/random/module/v1.Module";
  "*mods.irisnet.org/api/irismod/random/module/v1.Module" -> "mods.irisnet.org/modules/random.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/random.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/random.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/random.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/random.ProvideModule";
  "mods.irisnet.org/modules/service/keeper.Keeper" -> "mods.irisnet.org/modules/random.ProvideModule";
  "mods.irisnet.org/modules/random.ProvideModule" -> "mods.irisnet.org/modules/random/keeper.Keeper";
  "mods.irisnet.org/modules/random.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/record/module/v1.Module";
  "*mods.irisnet.org/api/irismod/record/module/v1.Module" -> "mods.irisnet.org/modules/record.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/record.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/record.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/record.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/record.ProvideModule";
  "mods.irisnet.org/modules/record.ProvideModule" -> "mods.irisnet.org/modules/record/keeper.Keeper";
  "mods.irisnet.org/modules/record.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "cosmossdk.io/depinject/appconfig.Compose" -> "*mods.irisnet.org/api/irismod/token/module/v1.Module";
  "*mods.irisnet.org/api/irismod/token/module/v1.Module" -> "mods.irisnet.org/modules/token.ProvideModule";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/modules/token.ProvideModule";
  "*cosmossdk.io/store/types.KVStoreKey" -> "mods.irisnet.org/modules/token.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/auth/keeper.AccountKeeper" -> "mods.irisnet.org/modules/token.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/bank/keeper.BaseKeeper" -> "mods.irisnet.org/modules/token.ProvideModule";
  "mods.irisnet.org/modules/token/types.EVMKeeper" -> "mods.irisnet.org/modules/token.ProvideModule";
  "mods.irisnet.org/modules/token/types.ICS20Keeper" -> "mods.irisnet.org/modules/token.ProvideModule";
  "github.com/cosmos/cosmos-sdk/x/params/types.Subspace" -> "mods.irisnet.org/modules/token.ProvideModule";
  "mods.irisnet.org/modules/token.ProvideModule" -> "mods.irisnet.org/modules/token/keeper.Keeper";
  "mods.irisnet.org/modules/token.ProvideModule" -> "map[string]cosmossdk.io/core/appmodule.AppModule";
  "mods.irisnet.org/modules/token.ProvideKeyTable" -> "map[string]github.com/cosmos/cosmos-sdk/x/params/types.KeyTable";
  "mods.irisnet.org/simapp.NewConfig" -> "*mods.irisnet.org/modules/token/keeper.mockEVM";
  "mods.irisnet.org/simapp.NewConfig" -> "*mods.irisnet.org/modules/token/keeper.mockICS20";
  "mods.irisnet.org/simapp.NewConfig" -> "cosmossdk.io/log.nopLogger";
  "*github.com/cosmos/cosmos-sdk/runtime.AppBuilder" -> "mods.irisnet.org/simapp.NewConfig";
  "github.com/cosmos/cosmos-sdk/client.TxConfig" -> "mods.irisnet.org/simapp.NewConfig";
  "github.com/cosmos/cosmos-sdk/codec.Codec" -> "mods.irisnet.org/simapp.NewConfig";
  "*github.com/cosmos/cosmos-sdk/codec.LegacyAmino" -> "mods.irisnet.org/simapp.NewConfig";
  "github.com/cosmos/cosmos-sdk/codec/types.InterfaceRegistry" -> "mods.irisnet.org/simapp.NewConfig";
}

